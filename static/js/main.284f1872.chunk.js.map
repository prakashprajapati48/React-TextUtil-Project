{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","mode","mode1","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","about","role","aria-disabled","onClick","togglemode1","htmlFor","togglemode","Textform","sertext","setSertext","useState","color","text","setText","split","length","document","getElementById","innerText","Fragment","style","value","backgroundColor","onChange","event","console","log","target","rows","onhandleUpCase","newText","toUpperCase","showAlert","onhandlelorCase","toLowerCase","protoTypes","propTypes","string","defaultProps","Alert","alert","word","lower","charAt","slice","capitlize","msg","App","setmode","setmode1","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.284f1872.chunk.js","sourcesContent":["import React from 'react'\r\nimport propTypes from 'prop-types'\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode || props.mode1} bg-${props.mode || props.mode1}`}>\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item\">\r\n                            <a className={`nav-link active navbar-${props.mode && props.mode1}`} aria-current=\"page\" href=\"#\">Home</a>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <a className={`nav-link active navbar-${props.mode && props.mode1}`} href=\"#\">{props.about}</a>\r\n                        </li>\r\n                        <li className=\"nav-item dropdown\">\r\n                            <a className={`nav-link dropdown-toggle active navbar-${props.mode && props.mode1}`} href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                                Dropdown\r\n                            </a>\r\n                            <ul className={`dropdown-menu active navbar-${props.mode}`}>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Action</a></li>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Another action</a></li>\r\n                                <li><hr className=\"dropdown-divider\" /></li>\r\n                                <li><a className=\"dropdown-item\" href=\"#\">Something else here</a></li>\r\n                            </ul>\r\n                        </li>\r\n                        <li className={`nav-item active navbar-${props.mode}`}>\r\n                            <a className=\"nav-link disabled\" aria-disabled=\"true\">Disabled</a>\r\n                        </li>\r\n                    </ul>\r\n                    <div  className={`form-check form-switch text-${props.mode1==='light'?'dark':'light'} mx-2`}>\r\n                        <input  className=\"form-check-input\" onClick={props.togglemode1} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label  className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable grey mode</label>\r\n                    </div>\r\n                    <div  className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n                        <input  className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n                            <label  className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable dark mode</label>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nNavbar.protoTypes = {\r\n    title: propTypes.string,\r\n    about: propTypes.string\r\n}\r\n\r\nNavbar.defaultProps = {\r\n    title: 'Navbar is here',\r\n    about: 'About us '\r\n};","import React, { useState } from 'react'\r\n\r\nexport default function Textform(props) {\r\n    const onChanges = (event) => {\r\n        console.log(\"Upercase in converted!\")\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const onhandleUpCase = () => {\r\n        console.log(\"Button on click!\")\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Uppercase in converted\",\"success\");\r\n    }\r\n\r\n    const copys = ()=>{\r\n        let text = document.getElementById(\"box\")\r\n        text.select();\r\n        navigator.clipboard.writeText(text.value);\r\n        props.showAlert(\"Copied Text\",\"success\");\r\n    }\r\n\r\n    // const onHighlight = (sertext) => {\r\n    //     let newText = text.toUpperCase();\r\n    //     let findedtext = text.search(sertext);\r\n    //     // text.matchAll(sertext).style={{backgroundColor:\"black\"}}\r\n    // }\r\n\r\n    const onhandlelorCase = () => {\r\n        console.log(\"Button on click!\")\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Lowercase in converted\",\"success\");\r\n    }\r\n\r\n    const [sertext, setSertext] = useState({\r\n        color: 'blue'\r\n    })\r\n\r\n    const [text, setText] = useState(\"\");\r\n\r\n    if(text.split(\" \").length == null){\r\n        let split_word = document.getElementById(\"split_word\")\r\n        split_word.innerText = `0 word and ${text.length}`;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"mb-3\">\r\n                <h2 style={{color:props.mode==='dark'?'white':'black',color:props.mode1==='light'?'secondary':'light'}}>Enter Text analycis below</h2>\r\n                <textarea className=\"form-control\" value={text} style={{backgroundColor:props.mode==='dark'?'white':'dark',color:props.mode1==='light'?'black':'grey'}} onChange={onChanges} id=\"box\" rows=\"10\"></textarea>\r\n                <button className=\"btn btn-primary mx-1\" onClick={onhandleUpCase}>UpperCase Convert</button>\r\n                <button className=\"btn btn-primary mx-1\" onClick={onhandlelorCase}>LowerCase Convert</button>\r\n                {/* <button className=\"btn btn-primary mx-1\" onClick={copys}>Copy</button> */}\r\n            </div>\r\n\r\n            <div className=\"container\" style={{color:props.mode==='dark'?'white':'black'}}>\r\n                <h1>Your text summary</h1>\r\n                <p id='split_word'>{text.split(\" \").length -1} word and {text.length} </p>\r\n                <p>{0.08 * text.split(\" \").length} Minutes</p>\r\n                <h2>Preview</h2>\r\n                <h2>{text}</h2>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitlize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1)\r\n    }\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n            <strong>{capitlize(props.alert.type)}</strong>: {props.alert.msg}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Navbar from './components/Navbar';\nimport Textform from './components/Textform';\nimport Alert from './components/Alert';\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setmode] = useState(\"light\")\n\n  const [mode1, setmode1] = useState(\"light\")\n\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 5000);\n  }\n\n  const togglemode = () => {\n    if (mode === \"light\") {\n      setmode(\"dark\");\n      document.body.style.backgroundColor = \"#37377f\";\n      showAlert(\"Dark mode is enabled!\", \"success\");\n    }\n    else {\n      setmode(\"light\")\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled!\", \"success\");\n    }\n  }\n\n  const togglemode1 = () => {\n    if (mode1 === \"light\") {\n      setmode1(\"#237b9f\");\n      document.body.style.backgroundColor = \"#237b9f\";\n      showAlert(\"Dark mode is enabled!\", \"success\");\n    }\n    else {\n      setmode1(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode is enabled!\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      <Navbar title=\"Navbars\" about=\"About us\" mode={mode} mode1={mode1} togglemode={togglemode} togglemode1={togglemode1} />\n      <div className=\"container my-3\">\n        <Alert alert={alert} />\n        <Textform showAlert={showAlert} mode={mode} />\n      </div>\n    </>\n  );\n}\n{/* <Router> */ }\n{/* <Routes> */ }\n{/* <Route path='/' element={<Textform showAlert={showAlert} mode={mode} />} />\n            <Route path=\"/about\" element={<About />} /> */}\n{/* </Routes> */ }\n{/* </Router> */ }\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}